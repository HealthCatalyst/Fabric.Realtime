// <auto-generated />
using Fabric.Realtime.Data.Stores;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Fabric.Realtime.Data.Migrations
{
    [DbContext(typeof(RealtimeContext))]
    [Migration("20170918220842_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fabric.Realtime.Data.Models.ForwardingHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MessageId");

                    b.Property<DateTimeOffset>("Sent");

                    b.Property<int>("SubscriptionId");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("ForwardingHistory");
                });

            modelBuilder.Entity("Fabric.Realtime.Data.Models.HL7Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ExternalPatientID")
                        .HasMaxLength(255);

                    b.Property<string>("InternalPatientID")
                        .HasMaxLength(255);

                    b.Property<string>("MessageControlID")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("MessageDate");

                    b.Property<string>("MessageHash")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("MessageType");

                    b.Property<string>("ProcessingID")
                        .HasMaxLength(255);

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("ProtocolVersion")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RawMessage")
                        .IsRequired();

                    b.Property<string>("ReceivingApplication")
                        .HasMaxLength(255);

                    b.Property<string>("ReceivingFacility")
                        .HasMaxLength(255);

                    b.Property<string>("SendingApplication")
                        .HasMaxLength(255);

                    b.Property<string>("SendingFacility")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("TransmissionReceiptTime");

                    b.Property<string>("XmlMessage");

                    b.HasKey("Id");

                    b.ToTable("HL7Message");
                });

            modelBuilder.Entity("Fabric.Realtime.Data.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("MessageFormat")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RoutingKey")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Fabric.Realtime.Data.Models.SubscriptionMessageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MessageType")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("SubscriptionId");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionMessageType");
                });

            modelBuilder.Entity("Fabric.Realtime.Data.Models.ForwardingHistory", b =>
                {
                    b.HasOne("Fabric.Realtime.Data.Models.Subscription")
                        .WithMany()
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fabric.Realtime.Data.Models.SubscriptionMessageType", b =>
                {
                    b.HasOne("Fabric.Realtime.Data.Models.Subscription")
                        .WithMany("MessageTypes")
                        .HasForeignKey("SubscriptionId");
                });
#pragma warning restore 612, 618
        }
    }
}
